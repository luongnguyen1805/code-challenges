#include <bits/stdc++.h>

using namespace std;

void merge(vector<int>& arr, int begin, int end, long &shift, vector<int>& temp) {
    
    if (begin >= end) {
        return;
    }
    
    int mid = begin + (end-begin+1)/2;
    
    merge(arr, begin, mid-1, shift, temp);    
    merge(arr, mid, end, shift, temp);
    
    // printf("\nMERGE\n");
    // for (int i = begin; i < mid; i++) {
    //     printf(" %d",arr[i]);
    // }

    // printf("\nTO\n");
    // for (int i = mid; i < end+1; i++) {
    //     printf(" %d",arr[i]);
    // }
    
    int i = begin;
    int j = mid;
    int ni = mid;
    int nj = end+1;
    int k = 0;

    while (i < ni && j < nj) {

        if (arr[i] <= arr[j]) {
            temp[k] = arr[i];
            i++;
        }
        else {
            temp[k] = arr[j];
            shift += (ni-i);
            j++;
        }   
        k++;
        if (temp.size() <= k) {
            temp.push_back(0);
        }        
    }

    for (; i < ni; i++) 
    {
        temp[k] = arr[i];
        k++;
        if (temp.size() <= k) {
            temp.push_back(0);
        }        
    }

    for (; j < nj; j++) 
    {
        temp[k] = arr[j];
        k++;
        if (temp.size() <= k) {
            temp.push_back(0);
        }        
    }

    k = 0;
    for (int i = begin; i <= end; i++, k++) 
        arr[i] = temp[k];
}

long insertionSort(vector<int>& arr) {
    long shift = 0;
    vector<int> temp = {0};
    merge(arr,0,arr.size()-1,shift,temp);
    return shift;
}

int insertionSortNaive(vector<int>& arr) {
    
    int n = arr.size();
    int totalShift = 0;
    
    for (int i = 0; i < n; i++) 
    {
        int cur = arr[i];

        for (int j = 0; j < i; j++) 
        {
            int anum = arr[j];
            if (cur < anum) {
                totalShift++;
            }
        }
    }        
    
    return totalShift;   
}

int main() {
    
    // vector<int> arr = {846427,768128,940405,850064,243282,353427,509318,11736,48629,368544,590079,253032,812812,501627,432105,264390,427413,56688,598297,381036,506253,976442,637676,381605,863771,424343,586285,408918,197275,438703,178047,560054,206830,118451,410117,966464,988230,435787,978199,36858,804330,568277,289889,617141,586255,721993,881531,530019,295032,996179,427406,801285,972620,65081,699241,352743,489424,801877,761660,203050,756932,456058,763103,963761,90860,689572,446576,79089,125358,424774,115946,446039,509402,922187,579532,95656,160531,977414,625674,455563,973592,53080,773199,462564,118160,988791,815306,607583,790667,93317,326985,547598,549374,90087,27711,156585,296010,474286,235674,937719,415412,867971,383758,924813,306509,963289,20469,467040,940702,162494,438954,430645,731925,212152,409560,850085,717294,224865,974019,507960,834533,301003,571910,900258,907442,599620,56843,719803,590257,292516,657522,5668,676838,557631,446833,983347,520919,983653,450386,977972,146146,405691,924968,878071,617842,334528,244507,851487,75744,734877,359446,910277,35880,447707,326886,459673,563678,383728,179475,670287,192595,353348,675954,869433,910978,639138,369131,948248,622790,819516,442571,285288,225206,367539,679710,359399,218418,924216,210885,810513,659092,86682,237141,211323,50741,564027,187347,614418,464106,366822,801056,656701,720169,477010,42485,147499,632499,411615,95746,255289,747482,538317,56928,489039,422207,736637,364789,156976,177204,92025,967488,352647,695058,204629,563970,745798,768655,267668,876568,749112,634489,677623,405812,871010,670984,964648,18508,303483,892614,630605,75123,640095,168921,648402,645485,107479,385038,10273,264454,78593,102297,231942,431239,797355,952922,511560,543152,237928,779228,936071,987039,930068,613694,909203,317429,801029,873850,335936,104511,282816,482893,695985,922910,168165,344386,84747,275644,245775,95019,56449,324367,197316,804742,271958,511022,757663,299869,570525,511942,79096,506596,498981,525516,636641,408183,842944,437669,798384,695232,58532,81199,178124,270868,520461,862640,615254,605207,138283,861028,700225,194732,701747,413892,515825,973704,441265,273488,789924,11790,785429,385372,34737,800761,910887,671377,208943,270182,625397,523679,481765,200280,604877,176240,471148,125337,38880,602753,246895,177162,980132,947120,888245,681878,877363,404070,171933,318628,193909,961857,846769,495689,347228,881505,296450,774466,69233,21744,44647,210981,61774,526412,411261,666651,702651,398760,308339,741530,1512,555234,435044,497995,18705,839640,696225,412419,760061,868157,247398,953969,346365,94166,966010,209944,975670,262459,500761,44902,800554,61760,772235,862328,104523,699847,45330,323525,98606,870020,65055,616469,941605,16450,114463,476661,372441,810687,889080,132502,195196,136477,86470,57912,230643,568831,784208,722664,347641,284968,283918,148195,863079,56152,526874,967601,755998,572203,291126,854603,958574,872532,987423,900179,888981,618237,376839,261421,428924,265918,393922,140471,918747,996744,714734,665741,81926,498941,388404,429567,300261,672321,94113,163339,244824,620986,130940,821,709540,938417,371775,668113,810948,359197,568291,699928,493786,461482,477700,439061,243751,387974,579531,162497,901069,810616,828237,982994,309557,732993,928912,126169,921665,23024,805859,166489,644009,453150,167309,869900,391566,55436,54365,202513,930984,622655,418792,424769,600488,412844,863829,844239,800817,959711,6735,218237,770327,351324,717582,596235,84316,646494,722403,5980,669517,528261,172468,829878,497763,856129,699777,889328,911564,754141,91841,358899,893148,510632,783668,493635,923475,647496,854225,240643,123559,860960,975231,893885,728635,692813,490119,812950,855658,728873,335281,525174,773485,24101,871403,271247,396581,87532,160575,824496,358024,768767,183394,767523,279398,967061,261158,719225,130909,115382,476219,254467,492693,451450,664703,221327,660614,671173,550628,516271,400045,402261,557796,173529,426361,945551,961128,822941,33082,638054,163788,391105,406820,347181,158628,202569,830594,936137,438145,477854,567870,914364,248672,576915,882165,913374,314593,59130,584546,865221,91752,500942,267481,165899,190822,210193,111449,151949,549485,144530,790002,713272,51987,713173,576804,726966,915742,407397,179454,353886,885250,263675,784601,650273,840589,666765,563646,155182,725894,664543,536754,333997,165484,320586,499896,872658,530778,611344,24606,80262,272226,330960,309885,840564,44132,886688,567529,476225,810437,263334,830111,212038,527008,614711,862311,367597,797828,942308,39130,40073,123203,92235,374070,805038,412820,873965,677695,459949,485308,218653,56562,757533,549612,366446,598096,110095,769485,681976,586320,579921,945309,416430,791959,988669,547492,170621,356265,345319,112928,911746,385392,236130,3980,275813,41168,933151,149777,718862,393099,635084,453866,449660,908969,3477,816105,23416,629924,101941,221744,216243,681862,683404,149024,473820,672072,212867,644440,544688,558186,273719,456433,459929,509849,976764,735741,67368,909914,401869,302581,819364,553304,756447,269023,462272,276275,601479,2040,906198,703420,223783,122440,901633,423538,787815,375452,95610,682,536243,640297,75219,326313,613082,51499,352513,589845,303591,419880,16111,705459,238813,351826,775114,511611,620849,237386,787885,738679,755777,694083,958450,495911,332874,860082,919448,637041,751885,15057,154074,804479,655354,229292,130792,784787,797142,483304,890983,100732};
    //vector<int> arr = {9492052,241944,5743396,5758608,6053545};
    //vector<int> arr = {423445,322542,658348,775271,97655,169958,912471,851392,474194,651149,123520,168276,609599,619430,17502,469680,538878,170894,737917,70286,324967,542395,241991,554258,673186,26777,867751,156490,917760,484834,92377,341204,323727,750724,116474,937733,437033,28944,789125,911226,196445,912644,595854,322395,48426,129707,308426,103655,300600,46342,173940,625566,588737,415931,696175,261922,959059,563925,934763,393170,565110,27139,734374,888836,294214,367199,826568,731246,912495,132044,158824,625291,44688,271029,947685,609465,400735,256110,713119,217686,302452,887058,359603,891188,819340,55777,669461,778399,136053,604224,687920,701162,631362,422293,106349,925576,305844,932916,173173,734690,64960,848348,359980,625999,119376,824016,235463,36462,80125,464933,254147,898928,351990,613749,306467,687682,185877,975928,982432,838281,580151,670351,55794,727864,608996,162142,169791,431191,611410,859316,165880,676369,707663,42211,818719,343391,866226,54181,379852,462702,519113,633999,877982,387454,764099,184448,591487,466328,160375,573918,304608,256877,760621,360402,501093,369616,38895,670883,800806,650304,46550,483037,843024,754213,41599,661742,97603,424176,232274,993806,403229,267738,627804,281210,655192,908255,465658,246678,374582,142384,336948,195541,399261,97568,72294,900353,983535,627541,87587,300692,277844,134137,783728,120868,404701,825326,298961,18655,765853,531235,12460,169081,798972,156616,450291,970515,581222,432300,733545,472155,574683,70492,667695,973943,684411,256341,390647,667945,883881,994586,968636,678076,645074,268715,798943,49774,610392,614256,68428,376244,145490,597239,545324,944461,753854,511966,431328,851427,944265,164872,323581,518948,235363,991276,9242,919773,763968,916241,104069,647848,910826,72704,325923,555899,857770,641218,122024,468161,255473,706803,360756,917314,304041,906079,378126,574247,934397,809453,425673,878661,974324,749254,397608,726038,256881,923202,162162,20848,839442,266230,185047,750267,855285,27321,822517,713054,184890,944540,697566,956714,651342,58321,874027,955382,480752,768505,45980,415148,577957,471653,293808,68633,737258,207768,794670,510490,130969,956832,531337,970410,223061,232735,237028,594698,260055,59544,307751,444945,4083,521669,401658,655424,579989,792037,127157,577092,560541,173137,992239,138497,161141,802399,207129,898398,10166,518151,925239,141134,474982,972927,627895,214394,205661,864922,809091,982067,924465,633194,427011,444899,154862,345021,100322,251202,653409,743830,828294,213949,916966,820532,868797,594458,622930,592278,9207,149447,110428,934445,806932,101761,907371,434826,316154,113031,816099,125245,611450,256915,274790,554812,701813,429651,899832,318486,197204,553240,62316,25497,283540,495633,362381,152337,606443,501662,744614,615649,651109,371393,550094,974392,473153,973816,409218,789306,603199,741668,430902,214648,514935,705691,769459,216747,651693,185643,51585,848897,255234,630252,390745,538774,642236,753125,691110,248678,254787,952075,864327,422247,323467,930772,912990,796619,904587,838559,585924,24137,580227,533178,238784,95161,238868,524595,828259,406913,710237,879843,255809,965470,26446,646553,504243,668682,916030,711704,917359,687168,663778,298037,625766,503596,228808,538755,300214,649747,377314,402490,673883,957540,935667,429019,569052,690886,953613,397310,614150,180201,793505,869958,145670,819950,32863,166265,488631,948892,394320,922342,152411,574450,220378,778176,78045,965538,316930,894611,131636,694243,297100,321870,168134,749118,750888,737185,956355,220852,650847,570505,401052,444351,956814,63074,780652,989676,229338,785635,454919,623657,707976,607329,198106,444705,385504,792503,410242,218786,687113,541877,913028,984212,380099,597514,249681,130986,334698,722387,868190,501896};
    //vector<int> arr = {1,5,6,8,9,2,3};
    //vector<int> arr = {2,1,3,1,2};
    //vector<int> arr = {4,3,2,1};
    //vector<int> arr = {1,2,3,4,5};
    //vector<int> arr = {1,2,4,5,9,8,3,2,6,3,4,1,1,4};
    vector<int> arr = {6,7,2,9,3};
    //vector<int> arr = {1,4,5,6,7,2,3,8,9};
    //vector<int> arr = {79, 96, 16, 53, 53, 29, 29, 75, 42, 58, 89,21, 83, 47, 12, 6, 91, 68, 34, 63, 9, 71, 36, 87, 26, 65, 50, 14, 76, 43, 94, 3};
    //vector<int> arr = {6,7,2,3};
    //vector<int> arr = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142};
    
    int naive = insertionSortNaive(arr);
    printf("\nSHIFT NAIVE=%d",naive);

    long v2 = insertionSort(arr);
    printf("\nSHIFT V2=%ld",v2);
    
    // printf("\nAFTER MERGE\n");
    // for (int i = 0; i < arr.size(); i++) {
    //     printf(" %d",arr[i]);
    // }

    return 0; 
}
